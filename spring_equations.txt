{xdd = -(-g*l1^2*l2^2*mp1^2*mp2-J2*g*l1^2*mp1^2)*theta1/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(-g*l1^2*l2^2*mp1*mp2^2-J1*g*l2^2*mp2^2)*theta2/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(Ks*l1^2*l2^2*mp1*mp2*rd+J1*Ks*l2^2*mp2*rd+J2*Ks*l1^2*mp1*rd+J1*J2*Ks*rd)*thetam/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(-Ks*l1^2*l2^2*mp1*mp2-J1*Ks*l2^2*mp2-J2*Ks*l1^2*mp1-J1*J2*Ks)*x/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(bc*l1^2*l2^2*mp1*mp2+J1*bc*l2^2*mp2+J2*bc*l1^2*mp1+J1*J2*bc)*xd/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2), theta1dd = -(-Mc*g*l2^2*mp2-g*l2^2*mp1*mp2-J2*Mc*g-J2*g*mp1-J2*g*mp2)*l1*mp1*theta1/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)+g*l2^2*mp2^2*l1*mp1*theta2/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(Ks*l2^2*mp2*rd+J2*Ks*rd)*l1*mp1*thetam/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(-Ks*l2^2*mp2-J2*Ks)*l1*mp1*x/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)-(bc*l2^2*mp2+J2*bc)*l1*mp1*xd/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2), theta2dd = -mp2*l2*g*l1^2*mp1^2*theta1/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)+mp2*l2*(-Mc*g*l1^2*mp1-g*l1^2*mp1*mp2-J1*Mc*g-J1*g*mp1-J1*g*mp2)*theta2/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)+mp2*l2*(Ks*l1^2*mp1*rd+J1*Ks*rd)*thetam/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)+mp2*l2*(-Ks*l1^2*mp1-J1*Ks)*x/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2)+mp2*l2*(bc*l1^2*mp1+J1*bc)*xd/(Mc*l1^2*l2^2*mp1*mp2+J1*Mc*l2^2*mp2+J1*l2^2*mp1*mp2+J2*Mc*l1^2*mp1+J2*l1^2*mp1*mp2+J1*J2*Mc+J1*J2*mp1+J1*J2*mp2), thetamdd = -(Km^2+R*bm)*thetamd/(Jd*R)+Km*V/(Jd*R)}